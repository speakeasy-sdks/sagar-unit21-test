// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MediaType - Type of media. The dropdown contains Unit21-recognized types.
//
// Though you can provide any string, Unit21 processes and display recognized `media_type` values with custom formatting. Unit21 can also use recognized media object types for dedicated requests, like document verification.
type MediaType string

const (
	MediaTypeImageProfilePicture      MediaType = "IMAGE_PROFILE_PICTURE"
	MediaTypeImageDriversLicenseFront MediaType = "IMAGE_DRIVERS_LICENSE_FRONT"
	MediaTypeImageDriversLicenseBack  MediaType = "IMAGE_DRIVERS_LICENSE_BACK"
	MediaTypeImagePassportFront       MediaType = "IMAGE_PASSPORT_FRONT"
	MediaTypeImageIDCardFront         MediaType = "IMAGE_ID_CARD_FRONT"
	MediaTypeImageIDCardBack          MediaType = "IMAGE_ID_CARD_BACK"
	MediaTypeImageFaceImage           MediaType = "IMAGE_FACE_IMAGE"
)

func (e MediaType) ToPointer() *MediaType {
	return &e
}

func (e *MediaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMAGE_PROFILE_PICTURE":
		fallthrough
	case "IMAGE_DRIVERS_LICENSE_FRONT":
		fallthrough
	case "IMAGE_DRIVERS_LICENSE_BACK":
		fallthrough
	case "IMAGE_PASSPORT_FRONT":
		fallthrough
	case "IMAGE_ID_CARD_FRONT":
		fallthrough
	case "IMAGE_ID_CARD_BACK":
		fallthrough
	case "IMAGE_FACE_IMAGE":
		*e = MediaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaType: %v", v)
	}
}
