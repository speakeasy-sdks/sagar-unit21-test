// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MediaTypeEnum - Type of media. The dropdown contains Unit21-recognized types.
//
// Though you can provide any string, Unit21 processes and display recognized `media_type` values with custom formatting. Unit21 can also use recognized media object types for dedicated requests, like document verification.
type MediaTypeEnum string

const (
	MediaTypeEnumImageProfilePicture      MediaTypeEnum = "IMAGE_PROFILE_PICTURE"
	MediaTypeEnumImageDriversLicenseFront MediaTypeEnum = "IMAGE_DRIVERS_LICENSE_FRONT"
	MediaTypeEnumImageDriversLicenseBack  MediaTypeEnum = "IMAGE_DRIVERS_LICENSE_BACK"
	MediaTypeEnumImagePassportFront       MediaTypeEnum = "IMAGE_PASSPORT_FRONT"
	MediaTypeEnumImageIDCardFront         MediaTypeEnum = "IMAGE_ID_CARD_FRONT"
	MediaTypeEnumImageIDCardBack          MediaTypeEnum = "IMAGE_ID_CARD_BACK"
	MediaTypeEnumImageFaceImage           MediaTypeEnum = "IMAGE_FACE_IMAGE"
)

func (e MediaTypeEnum) ToPointer() *MediaTypeEnum {
	return &e
}

func (e *MediaTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMAGE_PROFILE_PICTURE":
		fallthrough
	case "IMAGE_DRIVERS_LICENSE_FRONT":
		fallthrough
	case "IMAGE_DRIVERS_LICENSE_BACK":
		fallthrough
	case "IMAGE_PASSPORT_FRONT":
		fallthrough
	case "IMAGE_ID_CARD_FRONT":
		fallthrough
	case "IMAGE_ID_CARD_BACK":
		fallthrough
	case "IMAGE_FACE_IMAGE":
		*e = MediaTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaTypeEnum: %v", v)
	}
}
