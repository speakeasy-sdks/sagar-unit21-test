// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateBlacklistTypeEnum - A value indicating what type of fields the blacklist will contain. One of `STRING`, `IP_INET`, `IP_CIDR`, `USER`, or `BUSINESS`.
type CreateBlacklistTypeEnum string

const (
	CreateBlacklistTypeEnumString   CreateBlacklistTypeEnum = "STRING"
	CreateBlacklistTypeEnumIPInet   CreateBlacklistTypeEnum = "IP_INET"
	CreateBlacklistTypeEnumIPCidr   CreateBlacklistTypeEnum = "IP_CIDR"
	CreateBlacklistTypeEnumUser     CreateBlacklistTypeEnum = "USER"
	CreateBlacklistTypeEnumBusiness CreateBlacklistTypeEnum = "BUSINESS"
)

func (e CreateBlacklistTypeEnum) ToPointer() *CreateBlacklistTypeEnum {
	return &e
}

func (e *CreateBlacklistTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		fallthrough
	case "IP_INET":
		fallthrough
	case "IP_CIDR":
		fallthrough
	case "USER":
		fallthrough
	case "BUSINESS":
		*e = CreateBlacklistTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBlacklistTypeEnum: %v", v)
	}
}

type CreateBlacklist struct {
	// A descriptive text field for the blacklist, maximum 512 characters in length.
	Description *string `json:"description,omitempty"`
	// A human-readable name for the blacklist.
	Name *string `json:"name,omitempty"`
	// A value indicating what type of fields the blacklist will contain. One of `STRING`, `IP_INET`, `IP_CIDR`, `USER`, or `BUSINESS`.
	Type *CreateBlacklistTypeEnum `json:"type,omitempty"`
}
