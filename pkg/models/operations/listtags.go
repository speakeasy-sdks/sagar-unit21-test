// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListTagsRequestBodyObjectTypesEnum string

const (
	ListTagsRequestBodyObjectTypesEnumAlert      ListTagsRequestBodyObjectTypesEnum = "alert"
	ListTagsRequestBodyObjectTypesEnumCase       ListTagsRequestBodyObjectTypesEnum = "case"
	ListTagsRequestBodyObjectTypesEnumSar        ListTagsRequestBodyObjectTypesEnum = "sar"
	ListTagsRequestBodyObjectTypesEnumRule       ListTagsRequestBodyObjectTypesEnum = "rule"
	ListTagsRequestBodyObjectTypesEnumAgent      ListTagsRequestBodyObjectTypesEnum = "agent"
	ListTagsRequestBodyObjectTypesEnumEvent      ListTagsRequestBodyObjectTypesEnum = "event"
	ListTagsRequestBodyObjectTypesEnumEntity     ListTagsRequestBodyObjectTypesEnum = "entity"
	ListTagsRequestBodyObjectTypesEnumInstrument ListTagsRequestBodyObjectTypesEnum = "instrument"
)

func (e ListTagsRequestBodyObjectTypesEnum) ToPointer() *ListTagsRequestBodyObjectTypesEnum {
	return &e
}

func (e *ListTagsRequestBodyObjectTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "alert":
		fallthrough
	case "case":
		fallthrough
	case "sar":
		fallthrough
	case "rule":
		fallthrough
	case "agent":
		fallthrough
	case "event":
		fallthrough
	case "entity":
		fallthrough
	case "instrument":
		*e = ListTagsRequestBodyObjectTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTagsRequestBodyObjectTypesEnum: %v", v)
	}
}

// ListTagsRequestBody - To filter your response to a subset of tag associations, use these fields.
type ListTagsRequestBody struct {
	// Date in seconds since 1 Jan 1970 00:00:00 UTC (i.e. in [Unix time](https://en.wikipedia.org/wiki/Unix_time)).
	CreatedAfter *int64 `json:"created_after,omitempty"`
	// Date in seconds since 1 Jan 1970 00:00:00 UTC (i.e. in [Unix time](https://en.wikipedia.org/wiki/Unix_time)).
	CreatedBefore *int64 `json:"created_before,omitempty"`
	// Number of objects per page.
	Limit *int64 `json:"limit,omitempty"`
	// String representing the `unit21_id` of the object you want to get tag associations for. If this is specified and `object_types` contains more than one value, the API returns an error.
	//
	ObjectID *int64 `json:"object_id,omitempty"`
	// Limit response to only tags associated with the set of listed Unit21 objects. The accepted values are `alert`, `case`, `sar`, `rule`, `agent`, `event`, `entity`, and `instrument`. If an `object_id` is specified,  and more than one value is provided to `object_types`, the API returns an error.
	ObjectTypes []ListTagsRequestBodyObjectTypesEnum `json:"object_types,omitempty"`
	// Pagination offset. A value of 1 returns a response beginning with the first record. The offset is relative to the number of pages (not the total count of objects)
	Offset *int64 `json:"offset,omitempty"`
	// List of string tags in the format `key:value` or `key` to match against (e.g. `alert_type:high_velocity` or `alert_type`). If only the key is provided, the API matches against all tags with that key.
	TagFilters []string `json:"tag_filters,omitempty"`
}

type ListTagsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
