// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ExportCasesRequestBodyFiltersStatusesEnum string

const (
	ExportCasesRequestBodyFiltersStatusesEnumOpen   ExportCasesRequestBodyFiltersStatusesEnum = "open"
	ExportCasesRequestBodyFiltersStatusesEnumClosed ExportCasesRequestBodyFiltersStatusesEnum = "closed"
)

func (e ExportCasesRequestBodyFiltersStatusesEnum) ToPointer() *ExportCasesRequestBodyFiltersStatusesEnum {
	return &e
}

func (e *ExportCasesRequestBodyFiltersStatusesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		*e = ExportCasesRequestBodyFiltersStatusesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportCasesRequestBodyFiltersStatusesEnum: %s", s)
	}
}

// ExportCasesRequestBodyFilters - Filter to narrow down cases in export
type ExportCasesRequestBodyFilters struct {
	// Numerical IDs of the agents.
	AgentIds []int64 `json:"agent_ids,omitempty"`
	// Numerical ID of the cases.
	CaseIds []int64 `json:"case_ids,omitempty"`
	// Case creation end date.
	EndDate *string `json:"end_date,omitempty"`
	// Maximum amount in the case.
	MaximumAmount *int64 `json:"maximum_amount,omitempty"`
	// Minimum amount in the case.
	MinimumAmount *int64 `json:"minimum_amount,omitempty"`
	// Numerical IDs of the rules.
	RuleIds []int64 `json:"rule_ids,omitempty"`
	// Case creation start date.
	StartDate *string `json:"start_date,omitempty"`
	// Status for the case.
	Status *string `json:"status,omitempty"`
	// Statuses for the cases.
	Statuses []ExportCasesRequestBodyFiltersStatusesEnum `json:"statuses,omitempty"`
	// Numerical IDs of the tags.
	TagIds []int64 `json:"tag_ids,omitempty"`
	// Numerical IDs of the teams.
	TeamIds []int64 `json:"team_ids,omitempty"`
}

// ExportCasesRequestBody - To filter your response.
type ExportCasesRequestBody struct {
	// Array of the unique identifiers of the case IDs.
	CaseIds []int64 `json:"case_ids,omitempty"`
	// Filter to narrow down cases in export
	Filters *ExportCasesRequestBodyFilters `json:"filters,omitempty"`
}

type ExportCasesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
